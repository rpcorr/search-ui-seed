{"version":3,"sources":["SmartSnippetSuggestions.min__d6b9bcc2bfcb024de483.js","./src/ui/SmartSnippet/SmartSnippetSuggestions.ts","./src/misc/AttachShadowPolyfill.ts","./src/ui/SmartSnippet/SmartSnippetCommon.ts","./src/ui/ResultLink/ResultLink.ts","./src/ui/SmartSnippet/SmartSnippetCollapsibleSuggestion.ts"],"names":["webpackJsonpCoveo__temporary","296","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","QUESTIONS_LIST_TITLE_CLASSNAME","QUESTIONS_LIST_CLASSNAME","SmartSnippetSuggestionsClassNames","HAS_QUESTIONS_CLASSNAME","BASE_CLASSNAME","element","options","bindings","SmartSnippetSuggestions","ID","titleId","uniqueId","ComponentOptions","initComponentOptions","bind","onRootElement","QueryEvents","deferredQuerySuccess","data","handleQuerySuccess","_this","get","contentLoaded","enumerable","configurable","getCorrespondingResult","questionAnswer","find","queryController","getLastResults","results","result","raw","documentId","contentIdKey","contentIdValue","hasQuestions","relatedQuestions","length","$$","toggleClass","searchUid","renderedQuestionAnswer","isEqual","detachContent","appendChild","title","buildTitle","el","questionAnswers","buildQuestionAnswers","detach","className","id","l","innerCSS","getInnerCSS","answers","map","SmartSnippetCollapsibleSuggestion","getBindings","Utils","isNullOrUndefined","getDefaultSnippetStyle","SmartSnippetCollapsibleSuggestionClassNames","RAW_CONTENT_CLASSNAME","titleField","hrefTemplate","alwaysOpenInNewWindow","source","useIFrame","container","ariaLabelledby","answer","build","Promise","all","loading","then","styles","children","filter","HTMLScriptElement","type","toLowerCase","innerHTML","join","doExport","exportGlobally","buildFieldOption","defaultValue","buildStringOption","buildBooleanOption","Component","Initialization","registerAutoCreateComponent","519","__awaiter","elementOptions","autoUpdateContainer","contentBody","onLoad","shadowRootContainer","__generator","_a","label","scrolling","resolve","addEventListener","contentDocument","body","style","margin","autoUpdateHeight","onSizeChanged","mode","elementToResize","content","onUpdate","lastWidth","clientWidth","lastHeight","clientHeight","MutationObserver","width","height","observe","attributes","characterData","childList","subtree","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","apply","verb","n","v","op","f","TypeError","_","y","t","call","ops","pop","trys","push","g","sent","throw","return","Symbol","iterator","520","contentClassName","532","585","69","__assign","assign","s","i","arguments","os","ResultLink","logAnalytics","debounce","saveLastQuery","documentURL","getAttribute","undefined","escapedClickUri","logDocumentOpen","Defer","flush","globalOptions","searchInterface","originalOptionsObject","initialOptions","resultLinkOptions","componentOptionsModel","ComponentOptionsModel","attributesEnum","resultLink","extend","resolveResult","openQuickview","DeviceUtils","isMobileDevice","hasAttribute","setAttribute","Assert","exists","quickviewShouldBeOpened","once","on","window","setTimeout","clearTimeout","renderUri","bindEventToOpen","test","getDisplayedTitle","titleAsText","getDisplayedTitleAsText","openLink","location","href","getResultUri","openLinkInNewWindow","open","openLinkInOutlook","hasOutlookField","openLinkAsConfigured","toExecuteOnOpen","bindOnClickIfNotUndefined","bindOpenQuickviewIfNotUndefined","setHrefIfNotAlready","openLinkThatIsNotAnAnchor","titleTemplate","newTitle","StringUtils","buildStringTemplateFromResult","StreamHighlightUtils","highlightStreamText","termsToHighlight","phrasesToHighlight","HighlightUtils","highlightString","titleHighlights","setHtml","text","escape","clickUri","onClick","AccessibleButton","withElement","withLabel","withSelectAction","resultElement","trigger","ResultListEvents","preventDefault","elementIsAnAnchor","openInOutlook","isNonEmptyString","usageAnalytics","logClickEvent","analyticsActionCauseList","documentOpen","documentTitle","author","getFieldValue","root","filterProtocol","uri","isAbsolute","isRelative","field","setField","tagName","OSUtils","OS_NAME","MACOSX","WINDOWS","isUriThatMustBeOpenedInQuickview","indexOf","QueryUtils","hasHTMLVersion","buildCustomOption","706","707","QUESTION_CLASSNAME","QUESTION_TITLE_CLASSNAME","QUESTION_TITLE_LABEL_CLASSNAME","QUESTION_TITLE_CHECKBOX_CLASSNAME","QUESTION_SNIPPET_CLASSNAME","QUESTION_SNIPPET_CONTAINER_CLASSNAME","QUESTION_SNIPPET_HIDDEN_CLASSNAME","SHADOW_CLASSNAME","SOURCE_CLASSNAME","SOURCE_TITLE_CLASSNAME","SOURCE_URL_CLASSNAME","labelId","snippetId","checkboxId","expanded","collapsibleContainer","buildCollapsibleContainer","answerSnippet","question","buildStyle","updateExpanded","styleTag","document","createElement","checkbox","buildCheckbox","toggle","role","tabindex","ariaControls","withEnterKeyboardAction","shadowContainer","snippetAndSourceContainer","attachShadow","shadowRoot","buildAnswerSnippetContent","append","buildSourceUrl","buildSourceTitle","snippet","link","buildLink","sendOpenSourceAnalytics","sendExpandAnalytics","sendCollapseAnalytics","updateIFrameExpanded","iframe","removeAttribute","toString","SVGIcons","icons","arrowUp","arrowDown","logCustomEvent","expandSmartSnippetSuggestion","searchQueryUid","collapseSmartSnippetSuggestion","openSmartSnippetSuggestionSource"],"mappings":"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","file":"SmartSnippetSuggestions.min__d6b9bcc2bfcb024de483.js","sourcesContent":["webpackJsonpCoveo__temporary([22,65],{\n\n/***/ 296:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(706);\nvar Component_1 = __webpack_require__(7);\nvar GlobalExports_1 = __webpack_require__(3);\nvar QueryEvents_1 = __webpack_require__(11);\nvar Dom_1 = __webpack_require__(1);\nvar underscore_1 = __webpack_require__(0);\nvar SmartSnippetCollapsibleSuggestion_1 = __webpack_require__(707);\nvar Strings_1 = __webpack_require__(6);\nvar Initialization_1 = __webpack_require__(2);\nvar Utils_1 = __webpack_require__(4);\nvar SmartSnippetCommon_1 = __webpack_require__(520);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar BASE_CLASSNAME = 'coveo-smart-snippet-suggestions';\nvar HAS_QUESTIONS_CLASSNAME = BASE_CLASSNAME + \"-has-questions\";\nvar QUESTIONS_LIST_CLASSNAME = BASE_CLASSNAME + \"-questions\";\nvar QUESTIONS_LIST_TITLE_CLASSNAME = QUESTIONS_LIST_CLASSNAME + \"-title\";\nexports.SmartSnippetSuggestionsClassNames = {\n    HAS_QUESTIONS_CLASSNAME: HAS_QUESTIONS_CLASSNAME,\n    QUESTIONS_LIST_CLASSNAME: QUESTIONS_LIST_CLASSNAME,\n    QUESTIONS_LIST_TITLE_CLASSNAME: QUESTIONS_LIST_TITLE_CLASSNAME\n};\n/**\n * The SmartSnippetSuggestions component displays additional queries for which a Coveo Smart Snippets model can provide relevant excerpts.\n */\nvar SmartSnippetSuggestions = /** @class */ (function (_super) {\n    __extends(SmartSnippetSuggestions, _super);\n    function SmartSnippetSuggestions(element, options, bindings) {\n        var _this = _super.call(this, element, SmartSnippetSuggestions.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.titleId = underscore_1.uniqueId(QUESTIONS_LIST_TITLE_CLASSNAME);\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, SmartSnippetSuggestions, options);\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.deferredQuerySuccess, function (data) { return _this.handleQuerySuccess(data); });\n        return _this;\n    }\n    Object.defineProperty(SmartSnippetSuggestions.prototype, \"loading\", {\n        get: function () {\n            return this.contentLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @warning This method only works for the demo. In practice, the source of the answer will not always be part of the results.\n     */\n    SmartSnippetSuggestions.prototype.getCorrespondingResult = function (questionAnswer) {\n        return underscore_1.find(this.queryController.getLastResults().results, function (result) { return result.raw[questionAnswer.documentId.contentIdKey] === questionAnswer.documentId.contentIdValue; });\n    };\n    SmartSnippetSuggestions.prototype.handleQuerySuccess = function (data) {\n        var questionAnswer = data.results.questionAnswer;\n        var hasQuestions = !!(questionAnswer && questionAnswer.relatedQuestions.length);\n        Dom_1.$$(this.element).toggleClass(HAS_QUESTIONS_CLASSNAME, hasQuestions);\n        if (hasQuestions) {\n            this.searchUid = data.results.searchUid;\n            if (this.renderedQuestionAnswer && underscore_1.isEqual(questionAnswer, this.renderedQuestionAnswer)) {\n                return;\n            }\n            this.detachContent();\n            this.element.appendChild((this.title = this.buildTitle()).el);\n            this.element.appendChild((this.questionAnswers = this.buildQuestionAnswers(questionAnswer.relatedQuestions)).el);\n        }\n        else {\n            this.detachContent();\n        }\n        this.renderedQuestionAnswer = questionAnswer;\n    };\n    SmartSnippetSuggestions.prototype.detachContent = function () {\n        this.title && this.title.detach();\n        this.questionAnswers && this.questionAnswers.detach();\n        this.title = this.questionAnswers = null;\n    };\n    SmartSnippetSuggestions.prototype.buildTitle = function () {\n        return Dom_1.$$('span', { className: QUESTIONS_LIST_TITLE_CLASSNAME, id: this.titleId }, Strings_1.l('SuggestedQuestions'));\n    };\n    SmartSnippetSuggestions.prototype.buildQuestionAnswers = function (questionAnswers) {\n        var _this = this;\n        var innerCSS = this.getInnerCSS();\n        var answers = questionAnswers.map(function (questionAnswer) {\n            return new SmartSnippetCollapsibleSuggestion_1.SmartSnippetCollapsibleSuggestion({\n                questionAnswer: questionAnswer,\n                bindings: _this.getBindings(),\n                innerCSS: Utils_1.Utils.isNullOrUndefined(innerCSS)\n                    ? SmartSnippetCommon_1.getDefaultSnippetStyle(SmartSnippetCollapsibleSuggestion_1.SmartSnippetCollapsibleSuggestionClassNames.RAW_CONTENT_CLASSNAME)\n                    : innerCSS,\n                searchUid: _this.searchUid,\n                titleField: _this.options.titleField,\n                hrefTemplate: _this.options.hrefTemplate,\n                alwaysOpenInNewWindow: _this.options.alwaysOpenInNewWindow,\n                source: _this.getCorrespondingResult(questionAnswer),\n                useIFrame: _this.options.useIFrame\n            });\n        });\n        var container = Dom_1.$$.apply(void 0, ['ul',\n            { className: QUESTIONS_LIST_CLASSNAME, ariaLabelledby: this.titleId }].concat(answers.map(function (answer) { return answer.build(); })));\n        this.contentLoaded = Promise.all(answers.map(function (answer) { return answer.loading.then(function () { return answer; }); }));\n        return container;\n    };\n    SmartSnippetSuggestions.prototype.getInnerCSS = function () {\n        var styles = Dom_1.$$(this.element)\n            .children()\n            .filter(function (element) { return element instanceof HTMLScriptElement && element.type.toLowerCase() === 'text/css'; })\n            .map(function (element) { return element.innerHTML; });\n        return styles.length ? styles.join('\\n') : null;\n    };\n    SmartSnippetSuggestions.ID = 'SmartSnippetSuggestions';\n    SmartSnippetSuggestions.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            SmartSnippetSuggestions: SmartSnippetSuggestions\n        });\n    };\n    /**\n     * The options for the SmartSnippetSuggestions\n     * @componentOptions\n     */\n    SmartSnippetSuggestions.options = {\n        /**\n         * The field to display for the title.\n         */\n        titleField: ComponentOptions_1.ComponentOptions.buildFieldOption({ defaultValue: '@title' }),\n        /**\n         * Specifies a template literal from which to generate the title and URI's `href` attribute value (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the [`field`]{@link SmartSnippet.options.uriField} option value.\n         *\n         * The template literal can reference any number of fields from the parent result. It can also reference global\n         * scope properties.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n         *\n         * ```html\n         * <a class='CoveoSmartSnippet' data-href-template='${clickUri}?id=${raw.title}'></a>\n         * ```\n         *\n         * - The following markup generates an `href` value such as `localhost/fooBar`:\n         *\n         * ```html\n         * <a class='CoveoSmartSnippet' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n         * ```\n         *\n         * Default value is `undefined`.\n         */\n        hrefTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies whether the component should open its links in a new window instead of opening them in the current\n         * context.\n         *\n         * Default value is `false`.\n         */\n        alwaysOpenInNewWindow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specify if the SmartSnippetSuggestion snippet should be displayed inside an iframe or not.\n         *\n         * Use this option in specific cases where your environment has limitations around iframe usage.\n         *\n         * **Examples:**\n         *\n         * ```html\n         * <div class='CoveoSmartSnippetSuggestions' data-use-i-frame='true'></div>\n         * ```\n         *\n         * Default value is `true`.\n         */\n        useIFrame: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true })\n    };\n    return SmartSnippetSuggestions;\n}(Component_1.Component));\nexports.SmartSnippetSuggestions = SmartSnippetSuggestions;\nInitialization_1.Initialization.registerAutoCreateComponent(SmartSnippetSuggestions);\nSmartSnippetSuggestions.doExport();\n\n\n/***/ }),\n\n/***/ 519:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\n__webpack_require__(585);\nfunction attachShadow(element, options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var elementOptions, autoUpdateContainer, contentBody, onLoad, shadowRootContainer;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    elementOptions = { className: 'coveo-shadow-iframe', scrolling: 'no', title: options.title };\n                    if (!options.useIFrame) return [3 /*break*/, 2];\n                    autoUpdateContainer = Dom_1.$$('iframe', elementOptions).el;\n                    onLoad = new Promise(function (resolve) { return autoUpdateContainer.addEventListener('load', function () { return resolve(); }); });\n                    element.appendChild(autoUpdateContainer);\n                    return [4 /*yield*/, onLoad];\n                case 1:\n                    _a.sent();\n                    contentBody = autoUpdateContainer.contentDocument.body;\n                    return [3 /*break*/, 3];\n                case 2:\n                    autoUpdateContainer = Dom_1.$$('div', elementOptions).el;\n                    contentBody = autoUpdateContainer;\n                    element.appendChild(autoUpdateContainer);\n                    _a.label = 3;\n                case 3:\n                    contentBody.style.margin = '0';\n                    shadowRootContainer = Dom_1.$$('div', { style: 'overflow: auto;' }).el;\n                    contentBody.appendChild(shadowRootContainer);\n                    autoUpdateHeight(autoUpdateContainer, shadowRootContainer, options.onSizeChanged);\n                    if (options.mode === 'open') {\n                        Object.defineProperty(element, 'shadowRoot', { get: function () { return shadowRootContainer; } });\n                    }\n                    return [2 /*return*/, shadowRootContainer];\n            }\n        });\n    });\n}\nexports.attachShadow = attachShadow;\nfunction autoUpdateHeight(elementToResize, content, onUpdate) {\n    var lastWidth = content.clientWidth;\n    var lastHeight = content.clientHeight;\n    var heightObserver = new MutationObserver(function () {\n        if (lastWidth === content.clientWidth && lastHeight === content.clientHeight) {\n            return;\n        }\n        lastWidth = content.clientWidth;\n        lastHeight = content.clientHeight;\n        elementToResize.style.width = content.clientWidth + \"px\";\n        elementToResize.style.height = content.clientHeight + \"px\";\n        if (onUpdate) {\n            onUpdate();\n        }\n    });\n    heightObserver.observe(content, {\n        attributes: true,\n        characterData: true,\n        childList: true,\n        subtree: true\n    });\n}\n\n\n/***/ }),\n\n/***/ 520:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultSnippetStyle = function (contentClassName) { return \"\\n  body {\\n    font-family: \\\"Lato\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, sans-serif;\\n  }\\n\\n  .\" + contentClassName + \" > :first-child {\\n    margin-top: 0;\\n  }\\n\\n  .\" + contentClassName + \" > :last-child {\\n    margin-bottom: 0;\\n  }\\n\"; };\n\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 585:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 69:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar ComponentOptionsModel_1 = __webpack_require__(28);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar ResultListEvents_1 = __webpack_require__(29);\nvar HighlightUtils_1 = __webpack_require__(67);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar OSUtils_1 = __webpack_require__(178);\nvar Initialization_1 = __webpack_require__(2);\nvar QueryUtils_1 = __webpack_require__(21);\nvar Assert_1 = __webpack_require__(5);\nvar Utils_1 = __webpack_require__(4);\nvar Defer_1 = __webpack_require__(31);\nvar Dom_1 = __webpack_require__(1);\nvar StreamHighlightUtils_1 = __webpack_require__(118);\nvar StringUtils_1 = __webpack_require__(22);\nvar underscore_1 = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n__webpack_require__(532);\nvar AccessibleButton_1 = __webpack_require__(15);\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar ResultLink = /** @class */ (function (_super) {\n    __extends(ResultLink, _super);\n    /**\n     * Creates a new `ResultLink` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `ResultLink` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     * @param os\n     */\n    function ResultLink(element, options, bindings, result, os) {\n        var _this = _super.call(this, element, ResultLink.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.os = os;\n        _this.logAnalytics = underscore_1.debounce(function () {\n            _this.queryController.saveLastQuery();\n            var documentURL = Dom_1.$$(_this.element).getAttribute('href');\n            if (documentURL == undefined || documentURL == '') {\n                documentURL = _this.escapedClickUri;\n            }\n            if (_this.options.logAnalytics) {\n                _this.options.logAnalytics(documentURL);\n            }\n            else {\n                _this.logDocumentOpen(documentURL);\n            }\n            Defer_1.Defer.flush();\n        }, 1500, true);\n        var globalOptions = _this.searchInterface.options.originalOptionsObject[ResultLink.ID] || {};\n        var initialOptions = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultLink, __assign({}, globalOptions, options));\n        var resultLinkOptions = _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink);\n        _this.options = underscore_1.extend({}, initialOptions, resultLinkOptions);\n        _this.result = result || _this.resolveResult();\n        if (_this.options.openQuickview == null) {\n            _this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils_1.DeviceUtils.isMobileDevice();\n        }\n        if (!_this.element.hasAttribute('tabindex')) {\n            _this.element.setAttribute('tabindex', '0');\n        }\n        Assert_1.Assert.exists(_this.componentOptionsModel);\n        Assert_1.Assert.exists(_this.result);\n        if (!_this.quickviewShouldBeOpened()) {\n            // Bind on multiple \"click\" or \"mouse\" events.\n            // Create a function that will be executed only once, so as not to log multiple events\n            // Once a result link has been opened, and that we log at least one analytics event,\n            // it should not matter if the end user open the same link multiple times with different methods.\n            // It's still only one \"click\" event as far as UA is concerned.\n            // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n            var executeOnlyOnce_1 = underscore_1.once(function () { return _this.logAnalytics(); });\n            Dom_1.$$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce_1);\n            var longPressTimer_1;\n            Dom_1.$$(element).on('touchstart', function () {\n                longPressTimer_1 = window.setTimeout(executeOnlyOnce_1, 1000);\n            });\n            Dom_1.$$(element).on('touchend', function () {\n                if (longPressTimer_1) {\n                    clearTimeout(longPressTimer_1);\n                }\n            });\n        }\n        _this.renderUri(element, result);\n        _this.bindEventToOpen();\n        return _this;\n    }\n    ResultLink.prototype.renderUri = function (element, result) {\n        if (/^\\s*$/.test(this.element.innerHTML)) {\n            var title = this.getDisplayedTitle();\n            this.element.innerHTML = title;\n            var titleAsText = this.getDisplayedTitleAsText();\n            if (!this.element.hasAttribute('aria-label')) {\n                this.element.setAttribute('aria-label', titleAsText);\n            }\n            if (!this.element.title) {\n                this.element.title = titleAsText;\n            }\n        }\n    };\n    /**\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLink = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logAnalytics();\n        }\n        window.location.href = this.getResultUri();\n    };\n    /**\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInNewWindow = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logAnalytics();\n        }\n        window.open(this.getResultUri(), '_blank');\n    };\n    /**\n     * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n     *\n     * Normally, this implies the result should be a link to an email.\n     *\n     * If the needed fields are not present, this method does nothing.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInOutlook = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.hasOutlookField()) {\n            if (logAnalytics) {\n                this.logAnalytics();\n            }\n            this.openLink();\n        }\n    };\n    /**\n     * Opens the link in the same manner the end user would.\n     *\n     * This essentially simulates a click on the result link.\n     *\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkAsConfigured = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.toExecuteOnOpen) {\n            if (logAnalytics) {\n                this.logAnalytics();\n            }\n            this.toExecuteOnOpen();\n        }\n    };\n    ResultLink.prototype.bindEventToOpen = function () {\n        return (this.bindOnClickIfNotUndefined() ||\n            this.bindOpenQuickviewIfNotUndefined() ||\n            this.setHrefIfNotAlready() ||\n            this.openLinkThatIsNotAnAnchor());\n    };\n    ResultLink.prototype.getDisplayedTitle = function () {\n        if (!this.options.titleTemplate) {\n            return this.result.title\n                ? HighlightUtils_1.HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n                : this.escapedClickUri;\n        }\n        else {\n            var newTitle = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n            return newTitle\n                ? StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n                : this.escapedClickUri;\n        }\n    };\n    ResultLink.prototype.getDisplayedTitleAsText = function () {\n        var container = Dom_1.$$('div');\n        container.setHtml(this.getDisplayedTitle());\n        return container.text();\n    };\n    Object.defineProperty(ResultLink.prototype, \"escapedClickUri\", {\n        get: function () {\n            return underscore_1.escape(this.result.clickUri);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResultLink.prototype.bindOnClickIfNotUndefined = function () {\n        var _this = this;\n        if (this.options.onClick != undefined) {\n            this.toExecuteOnOpen = function (e) {\n                _this.options.onClick.call(_this, e, _this.result);\n            };\n            new AccessibleButton_1.AccessibleButton()\n                .withElement(this.element)\n                .withLabel(this.result.title)\n                .withSelectAction(function (e) { return _this.toExecuteOnOpen(e); })\n                .build();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.bindOpenQuickviewIfNotUndefined = function () {\n        var _this = this;\n        if (this.quickviewShouldBeOpened()) {\n            this.toExecuteOnOpen = function () {\n                Dom_1.$$(_this.bindings.resultElement).trigger(ResultListEvents_1.ResultListEvents.openQuickview);\n            };\n            Dom_1.$$(this.element).on('click', function (e) {\n                e.preventDefault();\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.openLinkThatIsNotAnAnchor = function () {\n        var _this = this;\n        if (!this.elementIsAnAnchor()) {\n            this.toExecuteOnOpen = function () {\n                if (_this.options.alwaysOpenInNewWindow) {\n                    if (_this.options.openInOutlook) {\n                        _this.openLinkInOutlook();\n                    }\n                    else {\n                        _this.openLinkInNewWindow();\n                    }\n                }\n                else {\n                    _this.openLink();\n                }\n            };\n            Dom_1.$$(this.element).on('click', function () {\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.setHrefIfNotAlready = function () {\n        // Do not erase any value put in href by the template, etc. Allows\n        // using custom click urls while still keeping analytics recording\n        // and other behavior brought by the component.\n        if (this.elementIsAnAnchor() && !Utils_1.Utils.isNonEmptyString(Dom_1.$$(this.element).getAttribute('href'))) {\n            Dom_1.$$(this.element).setAttribute('href', this.getResultUri());\n            if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n                Dom_1.$$(this.element).setAttribute('target', '_blank');\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.logDocumentOpen = function (href) {\n        this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentOpen, {\n            documentURL: href,\n            documentTitle: this.result.title,\n            author: Utils_1.Utils.getFieldValue(this.result, 'author')\n        }, this.result, this.root);\n    };\n    ResultLink.prototype.filterProtocol = function (uri) {\n        var isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n        var isRelative = /^(\\/|\\.\\/|\\.\\.\\/)/.test(uri);\n        return isAbsolute || isRelative ? uri : '';\n    };\n    ResultLink.prototype.getResultUri = function () {\n        if (this.options.hrefTemplate) {\n            var uri = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n            return this.filterProtocol(uri);\n        }\n        if (this.options.field == undefined && this.options.openInOutlook) {\n            this.setField();\n        }\n        if (this.options.field != undefined) {\n            return this.filterProtocol(Utils_1.Utils.getFieldValue(this.result, this.options.field));\n        }\n        return this.filterProtocol(this.result.clickUri);\n    };\n    ResultLink.prototype.elementIsAnAnchor = function () {\n        return this.element.tagName == 'A';\n    };\n    ResultLink.prototype.setField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.hasOutlookField()) {\n            this.options.field = '@outlookformacuri';\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.hasOutlookField()) {\n            this.options.field = '@outlookuri';\n        }\n    };\n    ResultLink.prototype.hasOutlookField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n            return true;\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.isUriThatMustBeOpenedInQuickview = function () {\n        return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n    };\n    ResultLink.prototype.quickviewShouldBeOpened = function () {\n        return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils_1.QueryUtils.hasHTMLVersion(this.result);\n    };\n    ResultLink.ID = 'ResultLink';\n    ResultLink.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            ResultLink: ResultLink\n        });\n    };\n    /**\n     * The options for the ResultLink\n     * @componentOptions\n     */\n    ResultLink.options = {\n        /**\n         * Specifies the field to use to output the component `href` attribute value.\n         *\n         * **Tip:**\n         * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n         * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n         *\n         * **Examples:**\n         * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n         * default field):\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n         * ```\n         *\n         * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n         *\n         * ```html\n         * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n         *   <div class='CoveoIcon>'></div>\n         *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n         *   <div class=\"CoveoExcerpt\"></div>\n         * </script>\n         * ```\n         *\n         * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n         *\n         * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n         */\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption(),\n        /**\n         * Specifies whether the component should try to open its link in Microsoft Outlook.\n         *\n         * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * Default value is `false`.\n         */\n        openInOutlook: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n         * loading through the original URL.\n         *\n         * Default value is `false`.\n         */\n        openQuickview: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in a new window instead of opening it in the current\n         * context.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * **Note:**\n         * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n         * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n         * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n         * > open their links in a new window when the end user clicks them, no matter what the value of their\n         * > `alwaysOpenInNewWindow` option is.\n         *\n         * Default value is `false`.\n         */\n        alwaysOpenInNewWindow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n         *\n         * The template literal can reference any number of fields from the parent result. It can also reference global\n         * scope properties.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n         * ```\n         *\n         * - The following markup generates an `href` value such as `localhost/fooBar`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n         * ```\n         *\n         * Default value is `undefined`.\n         */\n        hrefTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` display title (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the default `ResultLink` display title behavior.\n         *\n         * The template literal can reference any number of fields from the parent result. However, if the template literal\n         * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n         * name of this key instead.\n         *\n         * This option is ignored if the `ResultLink` innerHTML contains any value.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n         * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n         * ```\n         *\n         * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n         * in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n         * ```\n         *\n         * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n         * not empty:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n         * ```\n         *\n         * Default value is `undefined`.\n         *\n         * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n         */\n        titleTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n         *\n         * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n         * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n         *\n         * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n         *\n         * **Note:**\n         * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n         * > [`init`]{@link init} call of your search interface (see\n         * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n         * > or before the `init` call, using the `options` top-level function (see\n         * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n         *\n         * **Example:**\n         * ```javascript\n         * // You can set the option in the 'init' call:\n         * Coveo.init(document.querySelector(\"#search\"), {\n         *   ResultLink : {\n         *     onClick : function(e, result) {\n         *       e.preventDefault();\n         *       // Custom code to execute with the item URI and title.\n         *       openUriInASpecialTab(result.clickUri, result.title);\n         *     }\n         *   }\n         * });\n         *\n         * // Or before the 'init' call, using the 'options' top-level function:\n         * // Coveo.options(document.querySelector('#search'), {\n         * //   ResultLink : {\n         * //     onClick : function(e, result) {\n         * //       e.preventDefault();\n         * //       // Custom code to execute with the item URI and title.\n         * //       openUriInASpecialTab(result.clickUri, result.title);\n         * //     }\n         * //   }\n         * // });\n         * ```\n         */\n        onClick: ComponentOptions_1.ComponentOptions.buildCustomOption(function () {\n            return null;\n        }),\n        /**\n         * Specify this option to log additional analytics when this result link is pressed.\n         *\n         * **Example:**\n         * ```javascript\n         * const resultLink = new Coveo.ResultLink(\n         *   linkElement,\n         *   {\n         *     logAnalytics: (href) => Coveo.logCustomEvent(\n         *         Coveo.analyticsActionCauseList.openSmartSnippetSource,\n         *         {\n         *           searchQueryUid: searchInterface.queryController.lastSearchUid,\n         *           documentTitle: result.title,\n         *           author: Utils.getFieldValue(result, 'author'),\n         *           documentURL: href\n         *         },\n         *         element\n         *       )\n         *   },\n         *   searchInterface.getBindings(),\n         *   result\n         * )\n         * ```\n         */\n        logAnalytics: ComponentOptions_1.ComponentOptions.buildCustomOption(function () { return null; })\n    };\n    return ResultLink;\n}(Component_1.Component));\nexports.ResultLink = ResultLink;\nInitialization_1.Initialization.registerAutoCreateComponent(ResultLink);\n\n\n/***/ }),\n\n/***/ 706:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 707:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar underscore_1 = __webpack_require__(0);\nvar AccessibleButton_1 = __webpack_require__(15);\nvar SVGIcons_1 = __webpack_require__(12);\nvar AttachShadowPolyfill_1 = __webpack_require__(519);\nvar Dom_1 = __webpack_require__(1);\nvar Strings_1 = __webpack_require__(6);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar ResultLink_1 = __webpack_require__(69);\nvar Utils_1 = __webpack_require__(4);\nvar QUESTION_CLASSNAME = \"coveo-smart-snippet-suggestions-question\";\nvar QUESTION_TITLE_CLASSNAME = QUESTION_CLASSNAME + \"-title\";\nvar QUESTION_TITLE_LABEL_CLASSNAME = QUESTION_TITLE_CLASSNAME + \"-label\";\nvar QUESTION_TITLE_CHECKBOX_CLASSNAME = QUESTION_TITLE_CLASSNAME + \"-checkbox\";\nvar QUESTION_SNIPPET_CLASSNAME = QUESTION_CLASSNAME + \"-snippet\";\nvar QUESTION_SNIPPET_CONTAINER_CLASSNAME = QUESTION_SNIPPET_CLASSNAME + \"-container\";\nvar QUESTION_SNIPPET_HIDDEN_CLASSNAME = QUESTION_SNIPPET_CLASSNAME + \"-hidden\";\nvar SHADOW_CLASSNAME = QUESTION_SNIPPET_CLASSNAME + \"-content\";\nvar RAW_CONTENT_CLASSNAME = SHADOW_CLASSNAME + \"-raw\";\nvar SOURCE_CLASSNAME = QUESTION_CLASSNAME + \"-source\";\nvar SOURCE_TITLE_CLASSNAME = SOURCE_CLASSNAME + \"-title\";\nvar SOURCE_URL_CLASSNAME = SOURCE_CLASSNAME + \"-url\";\nexports.SmartSnippetCollapsibleSuggestionClassNames = {\n    QUESTION_CLASSNAME: QUESTION_CLASSNAME,\n    QUESTION_TITLE_CLASSNAME: QUESTION_TITLE_CLASSNAME,\n    QUESTION_TITLE_LABEL_CLASSNAME: QUESTION_TITLE_LABEL_CLASSNAME,\n    QUESTION_TITLE_CHECKBOX_CLASSNAME: QUESTION_TITLE_CHECKBOX_CLASSNAME,\n    QUESTION_SNIPPET_CLASSNAME: QUESTION_SNIPPET_CLASSNAME,\n    QUESTION_SNIPPET_CONTAINER_CLASSNAME: QUESTION_SNIPPET_CONTAINER_CLASSNAME,\n    QUESTION_SNIPPET_HIDDEN_CLASSNAME: QUESTION_SNIPPET_HIDDEN_CLASSNAME,\n    SHADOW_CLASSNAME: SHADOW_CLASSNAME,\n    RAW_CONTENT_CLASSNAME: RAW_CONTENT_CLASSNAME,\n    SOURCE_CLASSNAME: SOURCE_CLASSNAME,\n    SOURCE_TITLE_CLASSNAME: SOURCE_TITLE_CLASSNAME,\n    SOURCE_URL_CLASSNAME: SOURCE_URL_CLASSNAME\n};\nvar SmartSnippetCollapsibleSuggestion = /** @class */ (function () {\n    function SmartSnippetCollapsibleSuggestion(options) {\n        this.options = options;\n        this.labelId = underscore_1.uniqueId(QUESTION_TITLE_LABEL_CLASSNAME);\n        this.snippetId = underscore_1.uniqueId(QUESTION_SNIPPET_CLASSNAME);\n        this.checkboxId = underscore_1.uniqueId(QUESTION_TITLE_CHECKBOX_CLASSNAME);\n        this.expanded = false;\n    }\n    Object.defineProperty(SmartSnippetCollapsibleSuggestion.prototype, \"loading\", {\n        get: function () {\n            return this.contentLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SmartSnippetCollapsibleSuggestion.prototype.build = function () {\n        var collapsibleContainer = this.buildCollapsibleContainer(this.options.questionAnswer.answerSnippet, this.options.questionAnswer.question, this.buildStyle(this.options.innerCSS));\n        var title = this.buildTitle(this.options.questionAnswer.question);\n        this.updateExpanded();\n        return Dom_1.$$('li', {\n            className: QUESTION_CLASSNAME,\n            ariaLabelledby: this.labelId\n        }, title, collapsibleContainer).el;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildStyle = function (innerCSS) {\n        var styleTag = document.createElement('style');\n        styleTag.innerHTML = innerCSS;\n        return styleTag;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildTitle = function (question) {\n        var _this = this;\n        var checkbox = this.buildCheckbox(question);\n        var label = Dom_1.$$('span', { className: QUESTION_TITLE_LABEL_CLASSNAME, id: this.labelId });\n        label.text(question);\n        var title = Dom_1.$$('span', { className: QUESTION_TITLE_CLASSNAME }, label, checkbox);\n        title.on('click', function () { return _this.toggle(); });\n        return title;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildCheckbox = function (question) {\n        var _this = this;\n        this.checkbox = Dom_1.$$('div', {\n            role: 'button',\n            tabindex: 0,\n            ariaControls: this.snippetId,\n            className: QUESTION_TITLE_CHECKBOX_CLASSNAME,\n            id: this.checkboxId\n        });\n        new AccessibleButton_1.AccessibleButton()\n            .withElement(this.checkbox)\n            .withLabel(Strings_1.l('ExpandQuestionAnswer', question))\n            .withEnterKeyboardAction(function () { return _this.toggle(); })\n            .build();\n        return this.checkbox;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildCollapsibleContainer = function (innerHTML, title, style) {\n        var _this = this;\n        var shadowContainer = Dom_1.$$('div', { className: SHADOW_CLASSNAME });\n        this.snippetAndSourceContainer = Dom_1.$$('div', { className: QUESTION_SNIPPET_CONTAINER_CLASSNAME }, shadowContainer);\n        this.collapsibleContainer = Dom_1.$$('div', { className: QUESTION_SNIPPET_CLASSNAME, id: this.snippetId }, this.snippetAndSourceContainer);\n        this.contentLoaded = AttachShadowPolyfill_1.attachShadow(shadowContainer.el, {\n            mode: 'open',\n            title: Strings_1.l('AnswerSpecificSnippet', title),\n            useIFrame: this.options.useIFrame\n        }).then(function (shadowRoot) {\n            shadowRoot.appendChild(_this.buildAnswerSnippetContent(innerHTML, style).el);\n        });\n        if (this.options.source) {\n            this.snippetAndSourceContainer.append(this.buildSourceUrl().el);\n            this.snippetAndSourceContainer.append(this.buildSourceTitle().el);\n        }\n        return this.collapsibleContainer;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildAnswerSnippetContent = function (innerHTML, style) {\n        var snippet = Dom_1.$$('div', { className: RAW_CONTENT_CLASSNAME }, innerHTML);\n        var container = Dom_1.$$('div', {}, snippet);\n        container.append(style);\n        return container;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildSourceTitle = function () {\n        var link = this.buildLink(SOURCE_TITLE_CLASSNAME);\n        link.text(Utils_1.Utils.getFieldValue(this.options.source, this.options.titleField));\n        return link;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildSourceUrl = function () {\n        var link = this.buildLink(SOURCE_URL_CLASSNAME);\n        link.text(link.el.href);\n        return link;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildLink = function (className) {\n        var _this = this;\n        var element = Dom_1.$$('a', { className: \"CoveoResultLink \" + className });\n        new ResultLink_1.ResultLink(element.el, {\n            hrefTemplate: this.options.hrefTemplate,\n            logAnalytics: function (href) { return _this.sendOpenSourceAnalytics(element.el, href); },\n            alwaysOpenInNewWindow: this.options.alwaysOpenInNewWindow\n        }, __assign({}, this.options.bindings, { resultElement: this.collapsibleContainer.el }), this.options.source);\n        return element;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.toggle = function () {\n        this.expanded = !this.expanded;\n        this.updateExpanded();\n        if (this.expanded) {\n            this.sendExpandAnalytics();\n        }\n        else {\n            this.sendCollapseAnalytics();\n        }\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.updateIFrameExpanded = function () {\n        var iframe = this.snippetAndSourceContainer.find('iframe');\n        if (!iframe) {\n            return;\n        }\n        this.expanded ? iframe.removeAttribute('tabindex') : iframe.setAttribute('tabindex', '-1');\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.updateExpanded = function () {\n        this.checkbox.setAttribute('aria-expanded', this.expanded.toString());\n        this.checkbox.setHtml(this.expanded ? SVGIcons_1.SVGIcons.icons.arrowUp : SVGIcons_1.SVGIcons.icons.arrowDown);\n        this.collapsibleContainer.setAttribute('aria-hidden', (!this.expanded).toString());\n        this.collapsibleContainer.toggleClass(QUESTION_SNIPPET_HIDDEN_CLASSNAME, !this.expanded);\n        this.collapsibleContainer.el.style.height = this.expanded ? this.snippetAndSourceContainer.el.clientHeight + \"px\" : '0px';\n        this.updateIFrameExpanded();\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.sendExpandAnalytics = function () {\n        return this.options.bindings.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.expandSmartSnippetSuggestion, {\n            searchQueryUid: this.options.searchUid,\n            documentId: this.options.questionAnswer.documentId\n        }, this.checkbox.el);\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.sendCollapseAnalytics = function () {\n        return this.options.bindings.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.collapseSmartSnippetSuggestion, {\n            searchQueryUid: this.options.searchUid,\n            documentId: this.options.questionAnswer.documentId\n        }, this.checkbox.el);\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.sendOpenSourceAnalytics = function (element, href) {\n        return this.options.bindings.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.openSmartSnippetSuggestionSource, {\n            searchQueryUid: this.options.searchUid,\n            documentTitle: this.options.source.title,\n            author: Utils_1.Utils.getFieldValue(this.options.source, 'author'),\n            documentURL: href,\n            documentId: this.options.questionAnswer.documentId\n        }, this.options.source, element);\n    };\n    return SmartSnippetCollapsibleSuggestion;\n}());\nexports.SmartSnippetCollapsibleSuggestion = SmartSnippetCollapsibleSuggestion;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// SmartSnippetSuggestions.min__d6b9bcc2bfcb024de483.js","import 'styling/_SmartSnippetSuggestions';\nimport { Component } from '../Base/Component';\nimport { exportGlobally } from '../../GlobalExports';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { QueryEvents, IQuerySuccessEventArgs } from '../../events/QueryEvents';\nimport { IRelatedQuestionAnswerResponse, IQuestionAnswerResponse } from '../../rest/QuestionAnswerResponse';\nimport { $$, Dom } from '../../utils/Dom';\nimport { uniqueId, isEqual, find } from 'underscore';\nimport { SmartSnippetCollapsibleSuggestion, SmartSnippetCollapsibleSuggestionClassNames } from './SmartSnippetCollapsibleSuggestion';\nimport { l } from '../../strings/Strings';\nimport { Initialization } from '../Base/Initialization';\nimport { Utils } from '../../utils/Utils';\nimport { getDefaultSnippetStyle } from './SmartSnippetCommon';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IFieldOption } from '../Base/IComponentOptions';\n\nconst BASE_CLASSNAME = 'coveo-smart-snippet-suggestions';\nconst HAS_QUESTIONS_CLASSNAME = `${BASE_CLASSNAME}-has-questions`;\nconst QUESTIONS_LIST_CLASSNAME = `${BASE_CLASSNAME}-questions`;\nconst QUESTIONS_LIST_TITLE_CLASSNAME = `${QUESTIONS_LIST_CLASSNAME}-title`;\n\nexport const SmartSnippetSuggestionsClassNames = {\n  HAS_QUESTIONS_CLASSNAME,\n  QUESTIONS_LIST_CLASSNAME,\n  QUESTIONS_LIST_TITLE_CLASSNAME\n};\n\nexport interface ISmartSnippetSuggestionsOptions {\n  titleField: IFieldOption;\n  hrefTemplate?: string;\n  alwaysOpenInNewWindow?: boolean;\n  useIFrame?: boolean;\n}\n\n/**\n * The SmartSnippetSuggestions component displays additional queries for which a Coveo Smart Snippets model can provide relevant excerpts.\n */\nexport class SmartSnippetSuggestions extends Component {\n  static ID = 'SmartSnippetSuggestions';\n\n  static doExport = () => {\n    exportGlobally({\n      SmartSnippetSuggestions\n    });\n  };\n\n  /**\n   * The options for the SmartSnippetSuggestions\n   * @componentOptions\n   */\n  static options: ISmartSnippetSuggestionsOptions = {\n    /**\n     * The field to display for the title.\n     */\n    titleField: ComponentOptions.buildFieldOption({ defaultValue: '@title' }),\n\n    /**\n     * Specifies a template literal from which to generate the title and URI's `href` attribute value (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the [`field`]{@link SmartSnippet.options.uriField} option value.\n     *\n     * The template literal can reference any number of fields from the parent result. It can also reference global\n     * scope properties.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n     *\n     * ```html\n     * <a class='CoveoSmartSnippet' data-href-template='${clickUri}?id=${raw.title}'></a>\n     * ```\n     *\n     * - The following markup generates an `href` value such as `localhost/fooBar`:\n     *\n     * ```html\n     * <a class='CoveoSmartSnippet' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n     * ```\n     *\n     * Default value is `undefined`.\n     */\n    hrefTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies whether the component should open its links in a new window instead of opening them in the current\n     * context.\n     *\n     * Default value is `false`.\n     */\n    alwaysOpenInNewWindow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specify if the SmartSnippetSuggestion snippet should be displayed inside an iframe or not.\n     *\n     * Use this option in specific cases where your environment has limitations around iframe usage.\n     *\n     * **Examples:**\n     *\n     * ```html\n     * <div class='CoveoSmartSnippetSuggestions' data-use-i-frame='true'></div>\n     * ```\n     *\n     * Default value is `true`.\n     */\n    useIFrame: ComponentOptions.buildBooleanOption({ defaultValue: true })\n  };\n\n  private readonly titleId = uniqueId(QUESTIONS_LIST_TITLE_CLASSNAME);\n  private contentLoaded: Promise<SmartSnippetCollapsibleSuggestion[]>;\n  private title: Dom;\n  private questionAnswers: Dom;\n  private renderedQuestionAnswer: IQuestionAnswerResponse;\n  private searchUid: string;\n\n  constructor(public element: HTMLElement, public options?: ISmartSnippetSuggestionsOptions, bindings?: IComponentBindings) {\n    super(element, SmartSnippetSuggestions.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, SmartSnippetSuggestions, options);\n    this.bind.onRootElement(QueryEvents.deferredQuerySuccess, (data: IQuerySuccessEventArgs) => this.handleQuerySuccess(data));\n  }\n\n  public get loading() {\n    return this.contentLoaded;\n  }\n\n  /**\n   * @warning This method only works for the demo. In practice, the source of the answer will not always be part of the results.\n   */\n  private getCorrespondingResult(questionAnswer: IRelatedQuestionAnswerResponse) {\n    return find(\n      this.queryController.getLastResults().results,\n      result => result.raw[questionAnswer.documentId.contentIdKey] === questionAnswer.documentId.contentIdValue\n    );\n  }\n\n  private handleQuerySuccess(data: IQuerySuccessEventArgs) {\n    const questionAnswer = data.results.questionAnswer;\n    const hasQuestions = !!(questionAnswer && questionAnswer.relatedQuestions.length);\n    $$(this.element).toggleClass(HAS_QUESTIONS_CLASSNAME, hasQuestions);\n    if (hasQuestions) {\n      this.searchUid = data.results.searchUid;\n      if (this.renderedQuestionAnswer && isEqual(questionAnswer, this.renderedQuestionAnswer)) {\n        return;\n      }\n      this.detachContent();\n      this.element.appendChild((this.title = this.buildTitle()).el);\n      this.element.appendChild((this.questionAnswers = this.buildQuestionAnswers(questionAnswer.relatedQuestions)).el);\n    } else {\n      this.detachContent();\n    }\n    this.renderedQuestionAnswer = questionAnswer;\n  }\n\n  private detachContent() {\n    this.title && this.title.detach();\n    this.questionAnswers && this.questionAnswers.detach();\n    this.title = this.questionAnswers = null;\n  }\n\n  private buildTitle() {\n    return $$('span', { className: QUESTIONS_LIST_TITLE_CLASSNAME, id: this.titleId }, l('SuggestedQuestions'));\n  }\n\n  private buildQuestionAnswers(questionAnswers: IRelatedQuestionAnswerResponse[]) {\n    const innerCSS = this.getInnerCSS();\n    const answers = questionAnswers.map(\n      questionAnswer =>\n        new SmartSnippetCollapsibleSuggestion({\n          questionAnswer,\n          bindings: this.getBindings(),\n          innerCSS: Utils.isNullOrUndefined(innerCSS)\n            ? getDefaultSnippetStyle(SmartSnippetCollapsibleSuggestionClassNames.RAW_CONTENT_CLASSNAME)\n            : innerCSS,\n          searchUid: this.searchUid,\n          titleField: this.options.titleField,\n          hrefTemplate: this.options.hrefTemplate,\n          alwaysOpenInNewWindow: this.options.alwaysOpenInNewWindow,\n          source: this.getCorrespondingResult(questionAnswer),\n          useIFrame: this.options.useIFrame\n        })\n    );\n    const container = $$(\n      'ul',\n      { className: QUESTIONS_LIST_CLASSNAME, ariaLabelledby: this.titleId },\n      ...answers.map(answer => answer.build())\n    );\n    this.contentLoaded = Promise.all(answers.map(answer => answer.loading.then(() => answer)));\n    return container;\n  }\n\n  private getInnerCSS() {\n    const styles = $$(this.element)\n      .children()\n      .filter(element => element instanceof HTMLScriptElement && element.type.toLowerCase() === 'text/css')\n      .map(element => element.innerHTML);\n    return styles.length ? styles.join('\\n') : null;\n  }\n}\n\nInitialization.registerAutoCreateComponent(SmartSnippetSuggestions);\nSmartSnippetSuggestions.doExport();\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SmartSnippet/SmartSnippetSuggestions.ts","import { $$ } from '../utils/Dom';\nimport 'styling/_AttachShadowPolyfill';\n\nexport interface IShadowOptions {\n  title: string;\n  onSizeChanged?: Function;\n  useIFrame?: Boolean;\n}\n\nexport async function attachShadow(element: HTMLElement, options: IShadowOptions & ShadowRootInit): Promise<HTMLElement> {\n  const elementOptions = { className: 'coveo-shadow-iframe', scrolling: 'no', title: options.title };\n  let autoUpdateContainer: HTMLIFrameElement | HTMLElement;\n  let contentBody: HTMLElement;\n  if (options.useIFrame) {\n    autoUpdateContainer = $$('iframe', elementOptions).el;\n    const onLoad = new Promise(resolve => autoUpdateContainer.addEventListener('load', () => resolve()));\n    element.appendChild(autoUpdateContainer);\n    await onLoad;\n    contentBody = (autoUpdateContainer as HTMLIFrameElement).contentDocument.body;\n  } else {\n    autoUpdateContainer = $$('div', elementOptions).el;\n    contentBody = autoUpdateContainer;\n    element.appendChild(autoUpdateContainer);\n  }\n\n  contentBody.style.margin = '0';\n  const shadowRootContainer = $$('div', { style: 'overflow: auto;' }).el;\n  contentBody.appendChild(shadowRootContainer);\n  autoUpdateHeight(autoUpdateContainer, shadowRootContainer, options.onSizeChanged);\n  if (options.mode === 'open') {\n    Object.defineProperty(element, 'shadowRoot', { get: () => shadowRootContainer });\n  }\n\n  return shadowRootContainer;\n}\n\nfunction autoUpdateHeight(elementToResize: HTMLElement, content: HTMLElement, onUpdate?: Function) {\n  let lastWidth = content.clientWidth;\n  let lastHeight = content.clientHeight;\n\n  const heightObserver = new MutationObserver(() => {\n    if (lastWidth === content.clientWidth && lastHeight === content.clientHeight) {\n      return;\n    }\n    lastWidth = content.clientWidth;\n    lastHeight = content.clientHeight;\n    elementToResize.style.width = `${content.clientWidth}px`;\n    elementToResize.style.height = `${content.clientHeight}px`;\n    if (onUpdate) {\n      onUpdate();\n    }\n  });\n  heightObserver.observe(content, {\n    attributes: true,\n    characterData: true,\n    childList: true,\n    subtree: true\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/AttachShadowPolyfill.ts","export const getDefaultSnippetStyle = (contentClassName: string) => `\n  body {\n    font-family: \"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, sans-serif;\n  }\n\n  .${contentClassName} > :first-child {\n    margin-top: 0;\n  }\n\n  .${contentClassName} > :last-child {\n    margin-bottom: 0;\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SmartSnippet/SmartSnippetCommon.ts","import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { IResultLinkOptions } from './ResultLinkOptions';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { HighlightUtils } from '../../utils/HighlightUtils';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { OS_NAME, OSUtils } from '../../utils/OSUtils';\nimport { Initialization } from '../Base/Initialization';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { Assert } from '../../misc/Assert';\nimport { Utils } from '../../utils/Utils';\nimport { Defer } from '../../misc/Defer';\nimport { $$ } from '../../utils/Dom';\nimport { StreamHighlightUtils } from '../../utils/StreamHighlightUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { once, debounce, extend, escape } from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_ResultLink';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\n\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class ResultLink extends Component {\n  static ID = 'ResultLink';\n\n  static doExport = () => {\n    exportGlobally({\n      ResultLink: ResultLink\n    });\n  };\n\n  /**\n   * The options for the ResultLink\n   * @componentOptions\n   */\n  static options: IResultLinkOptions = {\n    /**\n     * Specifies the field to use to output the component `href` attribute value.\n     *\n     * **Tip:**\n     * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n     * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n     *\n     * **Examples:**\n     * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n     * default field):\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n     * ```\n     *\n     * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n     *\n     * ```html\n     * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n     *   <div class='CoveoIcon>'></div>\n     *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n     *   <div class=\"CoveoExcerpt\"></div>\n     * </script>\n     * ```\n     *\n     * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n     *\n     * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n     */\n    field: ComponentOptions.buildFieldOption(),\n\n    /**\n     * Specifies whether the component should try to open its link in Microsoft Outlook.\n     *\n     * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * Default value is `false`.\n     */\n    openInOutlook: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n     * loading through the original URL.\n     *\n     * Default value is `false`.\n     */\n    openQuickview: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in a new window instead of opening it in the current\n     * context.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * **Note:**\n     * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n     * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n     * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n     * > open their links in a new window when the end user clicks them, no matter what the value of their\n     * > `alwaysOpenInNewWindow` option is.\n     *\n     * Default value is `false`.\n     */\n    alwaysOpenInNewWindow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n     *\n     * The template literal can reference any number of fields from the parent result. It can also reference global\n     * scope properties.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n     * ```\n     *\n     * - The following markup generates an `href` value such as `localhost/fooBar`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n     * ```\n     *\n     * Default value is `undefined`.\n     */\n    hrefTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` display title (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the default `ResultLink` display title behavior.\n     *\n     * The template literal can reference any number of fields from the parent result. However, if the template literal\n     * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n     * name of this key instead.\n     *\n     * This option is ignored if the `ResultLink` innerHTML contains any value.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n     * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n     * ```\n     *\n     * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n     * in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n     * ```\n     *\n     * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n     * not empty:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n     * ```\n     *\n     * Default value is `undefined`.\n     *\n     * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n     */\n    titleTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n     *\n     * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n     * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n     *\n     * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n     *\n     * **Note:**\n     * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n     * > [`init`]{@link init} call of your search interface (see\n     * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n     * > or before the `init` call, using the `options` top-level function (see\n     * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n     *\n     * **Example:**\n     * ```javascript\n     * // You can set the option in the 'init' call:\n     * Coveo.init(document.querySelector(\"#search\"), {\n     *   ResultLink : {\n     *     onClick : function(e, result) {\n     *       e.preventDefault();\n     *       // Custom code to execute with the item URI and title.\n     *       openUriInASpecialTab(result.clickUri, result.title);\n     *     }\n     *   }\n     * });\n     *\n     * // Or before the 'init' call, using the 'options' top-level function:\n     * // Coveo.options(document.querySelector('#search'), {\n     * //   ResultLink : {\n     * //     onClick : function(e, result) {\n     * //       e.preventDefault();\n     * //       // Custom code to execute with the item URI and title.\n     * //       openUriInASpecialTab(result.clickUri, result.title);\n     * //     }\n     * //   }\n     * // });\n     * ```\n     */\n    onClick: ComponentOptions.buildCustomOption<(e: Event, result: IQueryResult) => any>(() => {\n      return null;\n    }),\n\n    /**\n     * Specify this option to log additional analytics when this result link is pressed.\n     *\n     * **Example:**\n     * ```javascript\n     * const resultLink = new Coveo.ResultLink(\n     *   linkElement,\n     *   {\n     *     logAnalytics: (href) => Coveo.logCustomEvent(\n     *         Coveo.analyticsActionCauseList.openSmartSnippetSource,\n     *         {\n     *           searchQueryUid: searchInterface.queryController.lastSearchUid,\n     *           documentTitle: result.title,\n     *           author: Utils.getFieldValue(result, 'author'),\n     *           documentURL: href\n     *         },\n     *         element\n     *       )\n     *   },\n     *   searchInterface.getBindings(),\n     *   result\n     * )\n     * ```\n     */\n    logAnalytics: ComponentOptions.buildCustomOption<(href: string) => void>(() => null)\n  };\n\n  private toExecuteOnOpen: (e?: Event) => void;\n\n  /**\n   * Creates a new `ResultLink` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `ResultLink` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param os\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IResultLinkOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    public os?: OS_NAME\n  ) {\n    super(element, ResultLink.ID, bindings);\n\n    const globalOptions = this.searchInterface.options.originalOptionsObject[ResultLink.ID] || {};\n    const initialOptions = ComponentOptions.initComponentOptions(element, ResultLink, { ...globalOptions, ...options });\n    const resultLinkOptions = this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink);\n    this.options = extend({}, initialOptions, resultLinkOptions);\n\n    this.result = result || this.resolveResult();\n\n    if (this.options.openQuickview == null) {\n      this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils.isMobileDevice();\n    }\n    if (!this.element.hasAttribute('tabindex')) {\n      this.element.setAttribute('tabindex', '0');\n    }\n\n    Assert.exists(this.componentOptionsModel);\n    Assert.exists(this.result);\n\n    if (!this.quickviewShouldBeOpened()) {\n      // Bind on multiple \"click\" or \"mouse\" events.\n      // Create a function that will be executed only once, so as not to log multiple events\n      // Once a result link has been opened, and that we log at least one analytics event,\n      // it should not matter if the end user open the same link multiple times with different methods.\n      // It's still only one \"click\" event as far as UA is concerned.\n      // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n\n      const executeOnlyOnce = once(() => this.logAnalytics());\n\n      $$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce);\n      let longPressTimer: number;\n      $$(element).on('touchstart', () => {\n        longPressTimer = window.setTimeout(executeOnlyOnce, 1000);\n      });\n      $$(element).on('touchend', () => {\n        if (longPressTimer) {\n          clearTimeout(longPressTimer);\n        }\n      });\n    }\n    this.renderUri(element, result);\n    this.bindEventToOpen();\n  }\n  public renderUri(element: HTMLElement, result?: IQueryResult) {\n    if (/^\\s*$/.test(this.element.innerHTML)) {\n      const title = this.getDisplayedTitle();\n      this.element.innerHTML = title;\n\n      const titleAsText = this.getDisplayedTitleAsText();\n      if (!this.element.hasAttribute('aria-label')) {\n        this.element.setAttribute('aria-label', titleAsText);\n      }\n\n      if (!this.element.title) {\n        this.element.title = titleAsText;\n      }\n    }\n  }\n  /**\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLink(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logAnalytics();\n    }\n    window.location.href = this.getResultUri();\n  }\n\n  /**\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInNewWindow(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logAnalytics();\n    }\n    window.open(this.getResultUri(), '_blank');\n  }\n\n  /**\n   * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n   *\n   * Normally, this implies the result should be a link to an email.\n   *\n   * If the needed fields are not present, this method does nothing.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInOutlook(logAnalytics = true) {\n    if (this.hasOutlookField()) {\n      if (logAnalytics) {\n        this.logAnalytics();\n      }\n      this.openLink();\n    }\n  }\n\n  /**\n   * Opens the link in the same manner the end user would.\n   *\n   * This essentially simulates a click on the result link.\n   *\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkAsConfigured(logAnalytics = true) {\n    if (this.toExecuteOnOpen) {\n      if (logAnalytics) {\n        this.logAnalytics();\n      }\n      this.toExecuteOnOpen();\n    }\n  }\n\n  protected bindEventToOpen(): boolean {\n    return (\n      this.bindOnClickIfNotUndefined() ||\n      this.bindOpenQuickviewIfNotUndefined() ||\n      this.setHrefIfNotAlready() ||\n      this.openLinkThatIsNotAnAnchor()\n    );\n  }\n\n  private getDisplayedTitle() {\n    if (!this.options.titleTemplate) {\n      return this.result.title\n        ? HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n        : this.escapedClickUri;\n    } else {\n      let newTitle = StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n      return newTitle\n        ? StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n        : this.escapedClickUri;\n    }\n  }\n\n  private getDisplayedTitleAsText() {\n    const container = $$('div');\n    container.setHtml(this.getDisplayedTitle());\n    return container.text();\n  }\n\n  private get escapedClickUri() {\n    return escape(this.result.clickUri);\n  }\n\n  private bindOnClickIfNotUndefined() {\n    if (this.options.onClick != undefined) {\n      this.toExecuteOnOpen = (e: MouseEvent) => {\n        this.options.onClick.call(this, e, this.result);\n      };\n\n      new AccessibleButton()\n        .withElement(this.element)\n        .withLabel(this.result.title)\n        .withSelectAction((e: Event) => this.toExecuteOnOpen(e))\n        .build();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private bindOpenQuickviewIfNotUndefined() {\n    if (this.quickviewShouldBeOpened()) {\n      this.toExecuteOnOpen = () => {\n        $$(this.bindings.resultElement).trigger(ResultListEvents.openQuickview);\n      };\n\n      $$(this.element).on('click', (e: Event) => {\n        e.preventDefault();\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private openLinkThatIsNotAnAnchor() {\n    if (!this.elementIsAnAnchor()) {\n      this.toExecuteOnOpen = () => {\n        if (this.options.alwaysOpenInNewWindow) {\n          if (this.options.openInOutlook) {\n            this.openLinkInOutlook();\n          } else {\n            this.openLinkInNewWindow();\n          }\n        } else {\n          this.openLink();\n        }\n      };\n\n      $$(this.element).on('click', () => {\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  private setHrefIfNotAlready() {\n    // Do not erase any value put in href by the template, etc. Allows\n    // using custom click urls while still keeping analytics recording\n    // and other behavior brought by the component.\n    if (this.elementIsAnAnchor() && !Utils.isNonEmptyString($$(this.element).getAttribute('href'))) {\n      $$(this.element).setAttribute('href', this.getResultUri());\n      if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n        $$(this.element).setAttribute('target', '_blank');\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private logDocumentOpen(href: string) {\n    this.usageAnalytics.logClickEvent(\n      analyticsActionCauseList.documentOpen,\n      {\n        documentURL: href,\n        documentTitle: this.result.title,\n        author: Utils.getFieldValue(this.result, 'author')\n      },\n      this.result,\n      this.root\n    );\n  }\n\n  private logAnalytics = debounce(\n    () => {\n      this.queryController.saveLastQuery();\n      let documentURL = $$(this.element).getAttribute('href');\n      if (documentURL == undefined || documentURL == '') {\n        documentURL = this.escapedClickUri;\n      }\n      if (this.options.logAnalytics) {\n        this.options.logAnalytics(documentURL);\n      } else {\n        this.logDocumentOpen(documentURL);\n      }\n      Defer.flush();\n    },\n    1500,\n    true\n  );\n\n  private filterProtocol(uri: string) {\n    const isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n    const isRelative = /^(\\/|\\.\\/|\\.\\.\\/)/.test(uri);\n\n    return isAbsolute || isRelative ? uri : '';\n  }\n\n  private getResultUri(): string {\n    if (this.options.hrefTemplate) {\n      const uri = StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n      return this.filterProtocol(uri);\n    }\n\n    if (this.options.field == undefined && this.options.openInOutlook) {\n      this.setField();\n    }\n\n    if (this.options.field != undefined) {\n      return this.filterProtocol(Utils.getFieldValue(this.result, <string>this.options.field));\n    }\n\n    return this.filterProtocol(this.result.clickUri);\n  }\n\n  private elementIsAnAnchor() {\n    return this.element.tagName == 'A';\n  }\n\n  private setField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.hasOutlookField()) {\n      this.options.field = '@outlookformacuri';\n    } else if (os == OS_NAME.WINDOWS && this.hasOutlookField()) {\n      this.options.field = '@outlookuri';\n    }\n  }\n\n  private hasOutlookField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n      return true;\n    } else if (os == OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n      return true;\n    }\n    return false;\n  }\n\n  private isUriThatMustBeOpenedInQuickview(): boolean {\n    return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n  }\n\n  private quickviewShouldBeOpened() {\n    return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils.hasHTMLVersion(this.result);\n  }\n}\n\nInitialization.registerAutoCreateComponent(ResultLink);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultLink/ResultLink.ts","import { IRelatedQuestionAnswerResponse } from '../../rest/QuestionAnswerResponse';\nimport { uniqueId } from 'underscore';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { attachShadow } from '../../misc/AttachShadowPolyfill';\nimport { $$, Dom } from '../../utils/Dom';\nimport { l } from '../../strings/Strings';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport {\n  analyticsActionCauseList,\n  IAnalyticsSmartSnippetSuggestionMeta,\n  IAnalyticsSmartSnippetSuggestionOpenSourceMeta\n} from '../Analytics/AnalyticsActionListMeta';\nimport { ResultLink } from '../ResultLink/ResultLink';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { Utils } from '../../utils/Utils';\nimport { IFieldOption } from '../Base/IComponentOptions';\n\nconst QUESTION_CLASSNAME = `coveo-smart-snippet-suggestions-question`;\nconst QUESTION_TITLE_CLASSNAME = `${QUESTION_CLASSNAME}-title`;\nconst QUESTION_TITLE_LABEL_CLASSNAME = `${QUESTION_TITLE_CLASSNAME}-label`;\nconst QUESTION_TITLE_CHECKBOX_CLASSNAME = `${QUESTION_TITLE_CLASSNAME}-checkbox`;\nconst QUESTION_SNIPPET_CLASSNAME = `${QUESTION_CLASSNAME}-snippet`;\nconst QUESTION_SNIPPET_CONTAINER_CLASSNAME = `${QUESTION_SNIPPET_CLASSNAME}-container`;\nconst QUESTION_SNIPPET_HIDDEN_CLASSNAME = `${QUESTION_SNIPPET_CLASSNAME}-hidden`;\nconst SHADOW_CLASSNAME = `${QUESTION_SNIPPET_CLASSNAME}-content`;\nconst RAW_CONTENT_CLASSNAME = `${SHADOW_CLASSNAME}-raw`;\nconst SOURCE_CLASSNAME = `${QUESTION_CLASSNAME}-source`;\nconst SOURCE_TITLE_CLASSNAME = `${SOURCE_CLASSNAME}-title`;\nconst SOURCE_URL_CLASSNAME = `${SOURCE_CLASSNAME}-url`;\n\nexport const SmartSnippetCollapsibleSuggestionClassNames = {\n  QUESTION_CLASSNAME,\n  QUESTION_TITLE_CLASSNAME,\n  QUESTION_TITLE_LABEL_CLASSNAME,\n  QUESTION_TITLE_CHECKBOX_CLASSNAME,\n  QUESTION_SNIPPET_CLASSNAME,\n  QUESTION_SNIPPET_CONTAINER_CLASSNAME,\n  QUESTION_SNIPPET_HIDDEN_CLASSNAME,\n  SHADOW_CLASSNAME,\n  RAW_CONTENT_CLASSNAME,\n  SOURCE_CLASSNAME,\n  SOURCE_TITLE_CLASSNAME,\n  SOURCE_URL_CLASSNAME\n};\n\nexport class SmartSnippetCollapsibleSuggestion {\n  private readonly labelId = uniqueId(QUESTION_TITLE_LABEL_CLASSNAME);\n  private readonly snippetId = uniqueId(QUESTION_SNIPPET_CLASSNAME);\n  private readonly checkboxId = uniqueId(QUESTION_TITLE_CHECKBOX_CLASSNAME);\n  private contentLoaded: Promise<void>;\n  private snippetAndSourceContainer: Dom;\n  private collapsibleContainer: Dom;\n  private checkbox: Dom;\n  private expanded = false;\n\n  constructor(\n    private readonly options: {\n      readonly questionAnswer: IRelatedQuestionAnswerResponse;\n      readonly bindings: IComponentBindings;\n      readonly innerCSS: string;\n      readonly searchUid: string;\n      readonly titleField: IFieldOption;\n      readonly hrefTemplate?: string;\n      readonly alwaysOpenInNewWindow?: boolean;\n      readonly source?: IQueryResult;\n      readonly useIFrame?: boolean;\n    }\n  ) {}\n\n  public get loading() {\n    return this.contentLoaded;\n  }\n\n  public build() {\n    const collapsibleContainer = this.buildCollapsibleContainer(\n      this.options.questionAnswer.answerSnippet,\n      this.options.questionAnswer.question,\n      this.buildStyle(this.options.innerCSS)\n    );\n    const title = this.buildTitle(this.options.questionAnswer.question);\n    this.updateExpanded();\n    return $$(\n      'li',\n      {\n        className: QUESTION_CLASSNAME,\n        ariaLabelledby: this.labelId\n      },\n      title,\n      collapsibleContainer\n    ).el as HTMLLIElement;\n  }\n\n  private buildStyle(innerCSS: string) {\n    const styleTag = document.createElement('style');\n    styleTag.innerHTML = innerCSS;\n    return styleTag;\n  }\n\n  private buildTitle(question: string) {\n    const checkbox = this.buildCheckbox(question);\n    const label = $$('span', { className: QUESTION_TITLE_LABEL_CLASSNAME, id: this.labelId });\n    label.text(question);\n    const title = $$('span', { className: QUESTION_TITLE_CLASSNAME }, label, checkbox);\n    title.on('click', () => this.toggle());\n    return title;\n  }\n\n  private buildCheckbox(question: string) {\n    this.checkbox = $$('div', {\n      role: 'button',\n      tabindex: 0,\n      ariaControls: this.snippetId,\n      className: QUESTION_TITLE_CHECKBOX_CLASSNAME,\n      id: this.checkboxId\n    });\n    new AccessibleButton()\n      .withElement(this.checkbox)\n      .withLabel(l('ExpandQuestionAnswer', question))\n      .withEnterKeyboardAction(() => this.toggle())\n      .build();\n    return this.checkbox;\n  }\n\n  private buildCollapsibleContainer(innerHTML: string, title: string, style: HTMLStyleElement) {\n    const shadowContainer = $$('div', { className: SHADOW_CLASSNAME });\n    this.snippetAndSourceContainer = $$('div', { className: QUESTION_SNIPPET_CONTAINER_CLASSNAME }, shadowContainer);\n    this.collapsibleContainer = $$('div', { className: QUESTION_SNIPPET_CLASSNAME, id: this.snippetId }, this.snippetAndSourceContainer);\n    this.contentLoaded = attachShadow(shadowContainer.el, {\n      mode: 'open',\n      title: l('AnswerSpecificSnippet', title),\n      useIFrame: this.options.useIFrame\n    }).then(shadowRoot => {\n      shadowRoot.appendChild(this.buildAnswerSnippetContent(innerHTML, style).el);\n    });\n    if (this.options.source) {\n      this.snippetAndSourceContainer.append(this.buildSourceUrl().el);\n      this.snippetAndSourceContainer.append(this.buildSourceTitle().el);\n    }\n    return this.collapsibleContainer;\n  }\n\n  private buildAnswerSnippetContent(innerHTML: string, style: HTMLStyleElement) {\n    const snippet = $$('div', { className: RAW_CONTENT_CLASSNAME }, innerHTML);\n    const container = $$('div', {}, snippet);\n    container.append(style);\n    return container;\n  }\n\n  private buildSourceTitle() {\n    const link = this.buildLink(SOURCE_TITLE_CLASSNAME);\n    link.text(Utils.getFieldValue(this.options.source!, <string>this.options.titleField));\n    return link;\n  }\n\n  private buildSourceUrl() {\n    const link = this.buildLink(SOURCE_URL_CLASSNAME);\n    link.text((link.el as HTMLAnchorElement).href);\n    return link;\n  }\n\n  private buildLink(className: string) {\n    const element = $$('a', { className: `CoveoResultLink ${className}` });\n    new ResultLink(\n      element.el,\n      {\n        hrefTemplate: this.options.hrefTemplate,\n        logAnalytics: href => this.sendOpenSourceAnalytics(element.el, href),\n        alwaysOpenInNewWindow: this.options.alwaysOpenInNewWindow\n      },\n      { ...this.options.bindings, resultElement: this.collapsibleContainer.el },\n      this.options.source\n    );\n    return element;\n  }\n\n  private toggle() {\n    this.expanded = !this.expanded;\n    this.updateExpanded();\n    if (this.expanded) {\n      this.sendExpandAnalytics();\n    } else {\n      this.sendCollapseAnalytics();\n    }\n  }\n\n  private updateIFrameExpanded() {\n    const iframe = this.snippetAndSourceContainer.find('iframe');\n    if (!iframe) {\n      return;\n    }\n    this.expanded ? iframe.removeAttribute('tabindex') : iframe.setAttribute('tabindex', '-1');\n  }\n\n  private updateExpanded() {\n    this.checkbox.setAttribute('aria-expanded', this.expanded.toString());\n    this.checkbox.setHtml(this.expanded ? SVGIcons.icons.arrowUp : SVGIcons.icons.arrowDown);\n    this.collapsibleContainer.setAttribute('aria-hidden', (!this.expanded).toString());\n    this.collapsibleContainer.toggleClass(QUESTION_SNIPPET_HIDDEN_CLASSNAME, !this.expanded);\n    this.collapsibleContainer.el.style.height = this.expanded ? `${this.snippetAndSourceContainer.el.clientHeight}px` : '0px';\n    this.updateIFrameExpanded();\n  }\n\n  private sendExpandAnalytics() {\n    return this.options.bindings.usageAnalytics.logCustomEvent<IAnalyticsSmartSnippetSuggestionMeta>(\n      analyticsActionCauseList.expandSmartSnippetSuggestion,\n      {\n        searchQueryUid: this.options.searchUid,\n        documentId: this.options.questionAnswer.documentId\n      },\n      this.checkbox.el\n    );\n  }\n\n  private sendCollapseAnalytics() {\n    return this.options.bindings.usageAnalytics.logCustomEvent<IAnalyticsSmartSnippetSuggestionMeta>(\n      analyticsActionCauseList.collapseSmartSnippetSuggestion,\n      {\n        searchQueryUid: this.options.searchUid,\n        documentId: this.options.questionAnswer.documentId\n      },\n      this.checkbox.el\n    );\n  }\n\n  private sendOpenSourceAnalytics(element: HTMLElement, href: string) {\n    return this.options.bindings.usageAnalytics.logClickEvent<IAnalyticsSmartSnippetSuggestionOpenSourceMeta>(\n      analyticsActionCauseList.openSmartSnippetSuggestionSource,\n      {\n        searchQueryUid: this.options.searchUid,\n        documentTitle: this.options.source.title,\n        author: Utils.getFieldValue(this.options.source, 'author'),\n        documentURL: href,\n        documentId: this.options.questionAnswer.documentId\n      },\n      this.options.source,\n      element\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SmartSnippet/SmartSnippetCollapsibleSuggestion.ts"],"sourceRoot":""}